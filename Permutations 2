class Solution:
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:

        res = []
        sol = []
        n = len(nums)
        hash_map = {}
        for num in nums:
            hash_map[num] = hash_map.get(num,0)+1
        def backtrack():
            if len(sol) == n :
                res.append(sol[:])
                return
            
            for num in hash_map:
                if hash_map[num] > 0:
                    sol.append(num)
                    hash_map[num]-=1
                    backtrack()
                    hash_map[num]+=1
                    sol.pop()
        backtrack()
        return res
        
