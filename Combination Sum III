class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:

        # res = []
        # for comb in combinations(range(1,10),k):
        #     if sum(comb) == n:
        #         res.append(list(comb))
        # return res

        res = []
        
        def backtrack(start,path,target):
            if len(path) == k:
                if target == 0:
                    res.append(path[:])
                return
            
            for i in range(start,10):
                if i > target:
                    break
                path.append(i)
                backtrack(i+1,path,target-i)
                path.pop()

        backtrack(1,[],n)
        return res



        
