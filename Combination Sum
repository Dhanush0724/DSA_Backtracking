class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:

        res = []
        sol = []
        nums = candidates
        n = len(nums)

        def backtrack(start,curr_sum):

            if curr_sum == target:
                res.append(sol[:])
                return
            
            if curr_sum > target or start == n:
                return
            
            for i in range(start,n):
                sol.append(candidates[i])
                backtrack(i,curr_sum+candidates[i])
                sol.pop()
        backtrack(0,0)
        return res
            
        
